#!/usr/bin/python3

# Import libraries
import sys
import re

# Parse args
args = sys.argv[1:]
path_input = args[0]
path_output_sol = args[1]
path_output_usr = args[2]

# Read input and identify algorithm
with open(path_input, "r") as reader:
    input = reader.read()
algorithm = input.split(" ")[3].rstrip()

# Read user output
with open(path_output_usr, "r") as reader:
    out_usr = reader.read()

# Check output for standard classification pipeline
if algorithm in ["lr", "nb", "knn", "svm", "rf"]:
    # Define RegEx
    regex = "Algorithm: " + algorithm + "\n" + \
            "Accuracy: [0-1]\.[0-9]+\n" + \
            "F1: [0-1]\.[0-9]+\n" + \
            "Precision: [0-1]\.[0-9]+\n" + \
            "Sensitivity: [0-1]\.[0-9]+\n" + \
            "Specificity: [0-1]\.[0-9]+\n"

    # Check if RegEx matches to user output
    if re.match(regex, out_usr):
        sys.stderr.write("Output is correct" + "\n")
        print(1.0)
    else:
        sys.stderr.write("User output does NOT match solution output format" + "\n")
        print(0.0)
# Check output for comparison pipeline
elif algorithm == "compare":
    # Define RegEx
    regex = "lr: [0-1]\.[0-9]+\n" + \
            "nb: [0-1]\.[0-9]+\n" + \
            "knn: [0-1]\.[0-9]+\n" + \
            "svm: [0-1]\.[0-9]+\n" + \
            "rf: [0-1]\.[0-9]+\n"

    # Check if RegEx matches to user output
    if re.match(regex, out_usr):
        sys.stderr.write("Output is correct" + "\n")
        print(1.0)
    else:
        sys.stderr.write("User output does NOT match solution output format" + "\n")
        print(0.0)
# Handle exception output
else:
    sys.stderr.write("Something wrong. Write an email!" + "\n")
    print(0.0)
